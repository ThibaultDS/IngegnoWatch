static unsigned int MySprite8x8[] =
{ TFT1.color565(0x66, 0x66, 0x66), TFT1.color565(0x66, 0x66, 0x66), TFT1.color565(0x66, 0x66, 0x66), TFT1.color565(0x66, 0x66, 0x66), TFT1.color565(0x66, 0x66, 0x66), TFT1.color565(0x66, 0x66, 0x66), TFT1.color565(0x66, 0x66, 0x66), TFT1.color565(0x66, 0x66, 0x66),
TFT1.color565(0x66, 0x66, 0x66), TFT1.color565(0x66, 0x66, 0x66), TFT1.color565(0x66, 0x66, 0x66), TFT1.color565(0x66, 0x66, 0x66), TFT1.color565(0x66, 0x66, 0x66), TFT1.color565(0x66, 0x66, 0x66), TFT1.color565(0x66, 0x66, 0x66), TFT1.color565(0x66, 0x66, 0x66),
TFT1.color565(0x66, 0x66, 0x66), TFT1.color565(0x66, 0x66, 0x66), TFT1.color565(0x66, 0x66, 0x66), TFT1.color565(0x66, 0x66, 0x66), TFT1.color565(0x66, 0x66, 0x66), TFT1.color565(0x66, 0x66, 0x66), TFT1.color565(0x66, 0x66, 0x66), TFT1.color565(0x66, 0x66, 0x66),
TFT1.color565(0x66, 0x66, 0x66), TFT1.color565(0x66, 0x66, 0x66), TFT1.color565(0x66, 0x66, 0x66), TFT1.color565(0x66, 0x66, 0x66), TFT1.color565(0x66, 0x66, 0x66), TFT1.color565(0x66, 0x66, 0x66), TFT1.color565(0x66, 0x66, 0x66), TFT1.color565(0x66, 0x66, 0x66),
TFT1.color565(0x66, 0x66, 0x66), TFT1.color565(0x66, 0x66, 0x66), TFT1.color565(0x66, 0x66, 0x66), TFT1.color565(0x66, 0x66, 0x66), TFT1.color565(0x66, 0x66, 0x66), TFT1.color565(0x66, 0x66, 0x66), TFT1.color565(0x66, 0x66, 0x66), TFT1.color565(0x66, 0x66, 0x66),
TFT1.color565(0x66, 0x66, 0x66), TFT1.color565(0x66, 0x66, 0x66), TFT1.color565(0x66, 0x66, 0x66), TFT1.color565(0x66, 0x66, 0x66), TFT1.color565(0x66, 0x66, 0x66), TFT1.color565(0x66, 0x66, 0x66), TFT1.color565(0x66, 0x66, 0x66), TFT1.color565(0x66, 0x66, 0x66),
TFT1.color565(0x66, 0x66, 0x66), TFT1.color565(0x66, 0x66, 0x66), TFT1.color565(0x66, 0x66, 0x66), TFT1.color565(0x66, 0x66, 0x66), TFT1.color565(0x66, 0x66, 0x66), TFT1.color565(0x66, 0x66, 0x66), TFT1.color565(0x66, 0x66, 0x66), TFT1.color565(0x66, 0x66, 0x66),
TFT1.color565(0x66, 0x66, 0x66), TFT1.color565(0x66, 0x66, 0x66), TFT1.color565(0x66, 0x66, 0x66), TFT1.color565(0x66, 0x66, 0x66), TFT1.color565(0x66, 0x66, 0x66), TFT1.color565(0x66, 0x66, 0x66), TFT1.color565(0x66, 0x66, 0x66), TFT1.color565(0x66, 0x66, 0x66)
};

#define MySpriteW            8     // sprite width
#define MySpriteH            8     // mario height
#define MySpriteW2           4     // half width
#define MySpriteH2           4     // half height
unsigned char MySpritepx, MySpritepy;


// ----------------------
// draw Sprites variables
// ----------------------
// temporary x and y var
static short TFT1tmpx, TFT1tmpy, TFT1tmps1, TFT1tmps2;



void setup() {
}

void loop() {

  // draw sprite
  // ---------------
  TFT1tmpx = MySpriteW - 1; //width sprite
  do {
    MySpritepx = 0 + 1 * TFT1tmpx;
    // draw MySprite at new position
    TFT1tmpy = MySpriteH - 1;
    do {
      MySpritepy = 0 + 1 * TFT1tmpy ;
      TFT1tmps1 = 1 - 1; //scale
      do {
        TFT1tmps2 = 1 - 1; //scale
        do {
          TFT1.drawPixel(MySpritepx + TFT1tmps1, MySpritepy + TFT1tmps2, MySprite8x8[TFT1tmpx + (TFT1tmpy * MySpriteW)]);
          } while (TFT1tmps2--);
      } while (TFT1tmps1--);
    } while (TFT1tmpy--);
  } while (TFT1tmpx--);


}
